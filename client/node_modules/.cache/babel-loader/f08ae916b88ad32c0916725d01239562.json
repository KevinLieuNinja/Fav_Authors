{"ast":null,"code":"var _jsxFileName = \"/Users/klieu/Desktop/Jan_Dojo_assinments/Java/MERN/FavoriteAuthors/client/src/components/authorform.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Card } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { Navigate, navigate } from \"@reach/router\";\nexport default (() => {\n  const [inputState, setInputState] = useState({\n    firstName: '',\n    lastName: ''\n  });\n\n  const onChangeHandler = e => {\n    setInputState({ ...inputState,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    axios.post('http://localhost:8000/api/author', inputState).then(res => console.log(inputState)).catch(err => {\n      const errorResponse = err.response.data.errors;\n      const errorArr = []; // Define a temp error array to push the messages in\n\n      for (const key of Object.keys(errorResponse)) {\n        // Loop through all errors and get the messages\n        errorArr.push(errorResponse[key].message);\n      }\n\n      setErrors(errorArr);\n    });\n    navigate(\"/\");\n  };\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Frist Name\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"firstName\",\n    onChange: onChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"lastName\",\n    onChange: onChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" Submit \")));\n});","map":{"version":3,"sources":["/Users/klieu/Desktop/Jan_Dojo_assinments/Java/MERN/FavoriteAuthors/client/src/components/authorform.js"],"names":["React","useState","axios","Card","Button","Navigate","navigate","inputState","setInputState","firstName","lastName","onChangeHandler","e","target","name","value","onSubmitHandler","preventDefault","post","then","res","console","log","catch","err","errorResponse","response","data","errors","errorArr","key","Object","keys","push","message","setErrors"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,eAAnC;AAGA,gBAAe,MAAO;AAClB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC;AACzCQ,IAAAA,SAAS,EAAC,EAD+B;AAEzCC,IAAAA,QAAQ,EAAC;AAFgC,GAAD,CAA5C;;AAKA,QAAMC,eAAe,GAAGC,CAAC,IAAG;AACxBJ,IAAAA,aAAa,CAAC,EACV,GAAGD,UADO;AAEV,OAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAgBF,CAAC,CAACC,MAAF,CAASE;AAFf,KAAD,CAAb;AAIH,GALD;;AAOA,QAAMC,eAAe,GAAGJ,CAAC,IAAG;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACAf,IAAAA,KAAK,CAACgB,IAAN,CAAW,kCAAX,EAA+CX,UAA/C,EAEKY,IAFL,CAEUC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYf,UAAZ,CAFjB,EAGKgB,KAHL,CAGWC,GAAG,IAAI;AAEN,YAAMC,aAAa,GAAGD,GAAG,CAACE,QAAJ,CAAaC,IAAb,CAAkBC,MAAxC;AACA,YAAMC,QAAQ,GAAG,EAAjB,CAHM,CAGe;;AACrB,WAAK,MAAMC,GAAX,IAAkBC,MAAM,CAACC,IAAP,CAAYP,aAAZ,CAAlB,EAA8C;AAAE;AAC5CI,QAAAA,QAAQ,CAACI,IAAT,CAAcR,aAAa,CAACK,GAAD,CAAb,CAAmBI,OAAjC;AACH;;AACDC,MAAAA,SAAS,CAACN,QAAD,CAAT;AACP,KAXL;AAcIvB,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACP,GAjBD;;AAkBA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEU,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,WAAxB;AAAoC,IAAA,QAAQ,EAAIL,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAFJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,QAAQ,EAAIA,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAPJ,EAYI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,CADJ,CADJ;AAmBH,CAlDD","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios';\nimport { Card } from \"@material-ui/core\"\nimport { Button } from \"@material-ui/core\"\nimport { Navigate, navigate } from \"@reach/router\"\n\n\nexport default ( ) => {\n    const [inputState, setInputState] = useState({\n        firstName:'',\n        lastName:'',\n    })\n\n    const onChangeHandler = e =>{\n        setInputState({\n            ...inputState,\n            [e.target.name]:e.target.value\n        })\n    }\n\n    const onSubmitHandler = e =>{\n        e.preventDefault();\n        axios.post('http://localhost:8000/api/author', inputState\n        )\n            .then(res => console.log(inputState))\n            .catch(err => {\n                \n                    const errorResponse = err.response.data.errors; \n                    const errorArr = []; // Define a temp error array to push the messages in\n                    for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\n                        errorArr.push(errorResponse[key].message)\n                    }\n                    setErrors(errorArr);\n            })\n\n\n            navigate(\"/\")\n    }\n    return(\n        <Card>\n            <form onSubmit={onSubmitHandler}>\n                \n                <p>\n                    <label>Frist Name</label>\n                    <br/>\n                    <input type='text' name='firstName' onChange = {onChangeHandler}></input>\n                </p>\n                <p>\n                    <label>Last Name</label>\n                    <br/>\n                    <input type='text' name='lastName' onChange = {onChangeHandler}></input>\n                </p>\n                <Button type=\"submit\"> Submit </Button>\n                {/* <input type='submit'/> */}\n            </form>\n        </Card>\n    )\n}"]},"metadata":{},"sourceType":"module"}